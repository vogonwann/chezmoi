function gitmenu
    set choice (printf "%s\n" \
        "üîç Status" \
        "‚ûï Add all" \
        "üìù Commit" \
        "üßô Commit (cz)" \
        "üì• Pull" \
        "üì§ Push" \
        "üíæ Stash" \
        "üîÅ Stash Pop" \
        "üè∑Ô∏è Create Tag" \
        "üöÄ Push Tag" \
        "üåø Checkout Branch" \
        "üå± Create Branch" \
        "üìú Log" \
        "üßæ Diff file" \
        "üß† Interactive Rebase" \
        "ü¶æ Open lazygit" \
        | fzf --prompt="Git Menu > " --height=50% --reverse)

    switch $choice
        case "üîç Status"
            git status

        case "‚ûï Add all"
            git add .
            echo "‚úÖ All changes staged."

        case "üìù Commit"
            echo "üìù Enter commit message:"
            read msg
            git commit -am "$msg"

        case "üßô Commit (cz)"
            if type -q cz
                cz commit
            else
                echo "‚ö†Ô∏è 'cz' (commitizen) not installed!"
            end

        case "üì• Pull"
            git pull

        case "üì§ Push"
            git push

        case "üíæ Stash"
            git stash
            echo "üíæ Changes stashed."

        case "üîÅ Stash Pop"
            git stash pop

        case "üè∑Ô∏è Create Tag"
            echo "üè∑Ô∏è Enter tag name:"
            read tag
            git tag $tag
            echo "‚úÖ Tag '$tag' created."

        case "üöÄ Push Tag"
            echo "üöÄ Enter tag name to push:"
            read tag
            git push origin $tag
            echo "üöÄ Tag '$tag' pushed."

        case "üåø Checkout Branch"
            set branch (git branch --all | grep -v HEAD | sed 's/.* //' | fzf --prompt="üåø Select branch > ")
            if test -n "$branch"
                git checkout $branch
            end

        case "üå± Create Branch"
            echo "üå± Enter new branch name:"
            read new_branch
            git checkout -b $new_branch

        case "üìú Log"
            git log --oneline --graph --decorate --all | less

        case "üßæ Diff file"
            set file (git diff --name-only | fzf --prompt="üßæ Select file > ")
            if test -n "$file"
                git diff $file | less
            else
                echo "‚ùå No file selected."
            end

        case "üß† Interactive Rebase"
            echo "üß† Enter base commit (e.g. HEAD~3):"
            read base
            if test -n "$base"
                git rebase -i $base
            else
                echo "‚ùå No commit entered."
            end

        case "ü¶æ Open lazygit"
            if type -q lazygit
                lazygit
            else
                echo "‚ö†Ô∏è 'lazygit' is not installed!"
            end

        case "*"
            echo "‚ùå Cancelled. Launching lazygit as fallback..."
            if type -q lazygit
                lazygit
            else
                echo "‚ö†Ô∏è 'lazygit' not found!"
            end
    end
end

